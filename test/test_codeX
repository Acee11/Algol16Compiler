program complex
    (* variables *)
    local var_x
    local x
    local y, z
    local chucktest'a
begin
    (* read *)
    read x;

    (* write *)
    write x;

    (* operators *)
    x := 10 + 10;
    x := 10 * 10;
    x := 10 div 10;
    x := 10 mod 10;

    (* operators - complex *)
    x := 2 + 3 * 4;
    if x <> 14 then write -1 fi;

    x := (2 + 3) * 4;
    if x <> 20 then write -2 fi;

    x := ((((2 + 3)))) * 4;
    if x <> 20 then write -3 fi;

    x := (12 * 6);                            if x <>  72 then write -4 fi;
    x := (12 * 6 + 3);                        if x <>  75 then write -5 fi;
    x := (12 * 6 + 3) * (2 + 1);              if x <> 225 then write -6 fi;
    x := (12 * 6 + 3) * (2 + 1) mod 10;       if x <>   5 then write -7 fi;
    x := (12 * 6 + 3) * (2 + 1) mod 10 div 2; if x <>   2 then write -8 fi;

    (* comments *)
    write 1;(* comment *)
    write 2; (* comment *)
    (* comment *)write 3;
    (* comment *) write 4;
    (* comment *)write 5;(* comment *)
    (* comment *) write 6;(* comment *)
    (* comment *)write 7; (* comment *)
    (* comment *) write 8; (* comment *)

    (* relatives *)
    if  1 <  0 then write  -9 fi;
    if  1 <= 0 then write -10 fi;
    if  1 <> 0 then write   9 fi;
    if  1 =  0 then write -11 fi;
    if  1 >  0 then write  10 fi;
    if  1 >= 0 then write  11 fi;
    if  1 <  1 then write -12 fi;
    if  1 <= 1 then write  12 fi;
    if  1 <> 1 then write -13 fi;
    if  1 =  1 then write  13 fi;
    if  1 >  1 then write -14 fi;
    if  1 >= 1 then write  14 fi;
    if -1 <  0 then write  15 fi;
    if -1 <= 0 then write  16 fi;
    if -1 <> 0 then write  17 fi;
    if -1 =  0 then write -15 fi;
    if -1 >  0 then write -16 fi;
    if -1 >= 0 then write -17 fi;

    (* relatives - complex *)
    if 1 = 0 or  1 = 1 then write  18 fi;
    if 1 = 1 or  1 = 0 then write  19 fi;
    if 1 = 0 and 1 = 1 then write -18 fi;
    if 1 = 1 and 1 = 0 then write -19 fi;

    (* else *)
    if 1 <> 1 then
        write -20
    else
        write 20
    fi;

    (* while *)
    x := 1;
    while x = 1 do
        x := 0
    done;

    (* example *)
    x := 99;
    y := 0;
    while x > y do
        x := x - 1;
        y := y + 1;
        z := 99;
        while z > 0 do
            z := z - 1;
            if z > y then
                y := 0
            fi
        done
    done
end
